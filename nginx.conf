user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /usr/share/nginx/modules/*.conf;
events {
	worker_connections 768;
}
http {
	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	server {
		server_name server.vidulusludorum.com;
		# root /root/app1; #(brauch ich garnicht)
		root /var/www/html;
		gzip on;
		index index.html index.htm index.nginx-debian.html;

		location = /was {
			add_header Content-Type text/plain;
			return 200 "wie bitte?????";
    }
		location /flask {
			add_header Content-Type text/plain;
			return 200 "da kommt dan flask app";
			# proxy_pass http://localhost:5000; 
		}
		# node js app listening on port 3000
		location / {
			#root /root/app1;
			proxy_pass http://localhost:3000; 
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}

		# static web site default location
		# location / {
		# 	try_files $uri $uri/ =404;
		# }
	
    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/server.vidulusludorum.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/server.vidulusludorum.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

	}
	server {
    if ($host = server.vidulusludorum.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name server.vidulusludorum.com;
    return 404; # managed by Certbot
	}
}
